name: Kernel Test

on:
  push:
    branches: [main]
    paths:
      - "fastvideo/**/*.py"
      - "csrc/**"
      - ".github/workflows/kernel-test.yml"
  pull_request:
    branches: [main]
    types: [opened, ready_for_review, synchronize, reopened]
    paths:
      - "fastvideo/**/*.py"
      - "csrc/**"
      - ".github/workflows/kernel-test.yml"
      - "pyproject.toml"
      - "docker/Dockerfile.python3.12"
  workflow_dispatch:
    inputs:
      run_training_test_VSA:
        description: "Run training-test-VSA"
        required: false
        default: false
        type: boolean
      run_inference_test_STA:
        description: "Run inference-test-STA"
        required: false
        default: false
        type: boolean
      run_precision_test_STA:
        description: "Run precision-test-STA"
        required: false
        default: false
        type: boolean
      run_precision_test_VSA:
        description: "Run precision-test-VSA"
        required: false
        default: false
        type: boolean

env:
  PYTHONUNBUFFERED: "1"

concurrency:
  group: kernel-test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre-commit:
    uses: ./.github/workflows/pre-commit.yml

  change-filter:
    runs-on: ubuntu-latest
    needs: pre-commit
    if: ${{ github.event.pull_request.draft == false || github.event_name == 'workflow_dispatch' }}
    outputs:
      training-test-VSA: ${{ steps.filter.outputs.training-test-VSA }}
      inference-test-STA: ${{ steps.filter.outputs.inference-test-STA }}
      precision-test-STA: ${{ steps.filter.outputs.precision-test-STA }}
      precision-test-VSA: ${{ steps.filter.outputs.precision-test-VSA }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            # Define reusable path patterns
            common-paths: &common-paths
              - 'pyproject.toml'
              - 'docker/Dockerfile.python3.12'
            sta-kernel-paths: &sta-kernel-paths
              - 'csrc/attn/st_attn/**'
              - 'csrc/attn/setup_sta.py'
              - 'csrc/attn/config_sta.py'
              - 'csrc/attn/st_attn.cpp'
            vsa-kernel-paths: &vsa-kernel-paths
              - 'csrc/attn/vsa/**'
              - 'csrc/attn/tk/**'
              - 'csrc/attn/setup_vsa.py'
              - 'csrc/attn/config_vsa.py'
              - 'csrc/attn/vsa.cpp'
            
            # Kernel tests
            training-test-VSA:
              - 'fastvideo/v1/**'
              - *common-paths
              - *vsa-kernel-paths
            inference-test-STA:
              - 'fastvideo/v1/**'
              - *common-paths
              - *sta-kernel-paths
            precision-test-STA:
              - *common-paths
              - *sta-kernel-paths
            precision-test-VSA:
              - *common-paths
              - *vsa-kernel-paths

  training-test-VSA:
    needs: change-filter
    if: >-
      (github.event_name != 'workflow_dispatch' && github.event.pull_request.draft == false) || 
      (github.event_name == 'workflow_dispatch' && github.event.inputs.run_training_test_VSA == 'true')
    uses: ./.github/workflows/runpod-test.yml
    with:
      job_id: "training-test-VSA"
      gpu_type: "NVIDIA H100 NVL"
      gpu_count: 1
      volume_size: 100
      disk_size: 100
      image: "ghcr.io/${{ github.repository }}/fastvideo-dev:py3.12-latest"
      test_command: "wandb login $WANDB_API_KEY && uv pip install -e .[test] && pytest ./fastvideo/v1/tests/training/VSA -srP"
      timeout_minutes: 30
    secrets:
      RUNPOD_API_KEY: ${{ secrets.RUNPOD_API_KEY }}
      RUNPOD_PRIVATE_KEY: ${{ secrets.RUNPOD_PRIVATE_KEY }}
      WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}

  inference-test-STA:
    needs: change-filter
    if: >-
      (github.event_name != 'workflow_dispatch' && github.event.pull_request.draft == false) || 
      (github.event_name == 'workflow_dispatch' && github.event.inputs.run_inference_test_STA == 'true')
    uses: ./.github/workflows/runpod-test.yml
    with:
      job_id: "inference-test-STA"
      gpu_type: "NVIDIA H100 NVL"
      gpu_count: 1
      volume_size: 100
      disk_size: 100
      image: "ghcr.io/${{ github.repository }}/fastvideo-dev:py3.12-latest"
      test_command: "uv pip install -e .[test] && pytest ./fastvideo/v1/tests/inference/STA -srP"
      timeout_minutes: 30
    secrets:
      RUNPOD_API_KEY: ${{ secrets.RUNPOD_API_KEY }}
      RUNPOD_PRIVATE_KEY: ${{ secrets.RUNPOD_PRIVATE_KEY }}

  precision-test-STA:
    needs: change-filter
    if: >-
      (github.event_name != 'workflow_dispatch' && github.event.pull_request.draft == false) || 
      (github.event_name == 'workflow_dispatch' && github.event.inputs.run_precision_test_STA == 'true')
    uses: ./.github/workflows/runpod-test.yml
    with:
      job_id: "precision-test-STA"
      gpu_type: "NVIDIA H100 NVL"
      gpu_count: 1
      volume_size: 100
      disk_size: 100
      image: "ghcr.io/${{ github.repository }}/fastvideo-dev:py3.12-latest"
      test_command: "uv pip install -e .[test] && python csrc/attn/tests/test_sta.py"
      timeout_minutes: 30
    secrets:
      RUNPOD_API_KEY: ${{ secrets.RUNPOD_API_KEY }}
      RUNPOD_PRIVATE_KEY: ${{ secrets.RUNPOD_PRIVATE_KEY }}

  precision-test-VSA:
    needs: change-filter
    if: >-
      (github.event_name != 'workflow_dispatch' && github.event.pull_request.draft == false) || 
      (github.event_name == 'workflow_dispatch' && github.event.inputs.run_precision_test_VSA == 'true')
    uses: ./.github/workflows/runpod-test.yml
    with:
      job_id: "precision-test-VSA"
      gpu_type: "NVIDIA H100 NVL"
      gpu_count: 1
      volume_size: 100
      disk_size: 100
      image: "ghcr.io/${{ github.repository }}/fastvideo-dev:py3.12-latest"
      test_command: "uv pip install -e .[test] && python csrc/attn/tests/test_block_sparse.py"
      timeout_minutes: 30
    secrets:
      RUNPOD_API_KEY: ${{ secrets.RUNPOD_API_KEY }}
      RUNPOD_PRIVATE_KEY: ${{ secrets.RUNPOD_PRIVATE_KEY }}

  runpod-cleanup:
    needs: [training-test-VSA, inference-test-STA, precision-test-STA, precision-test-VSA] 
    if: ${{ always() && ((github.event_name != 'workflow_dispatch' && github.event.pull_request.draft == false) || github.event_name == 'workflow_dispatch') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install requests

      - name: Cleanup all RunPod instances
        env:
          JOB_IDS: '["training-test-VSA", "inference-test-STA", "precision-test-STA", "precision-test-VSA"]'
          RUNPOD_API_KEY: ${{ secrets.RUNPOD_API_KEY }}
          GITHUB_RUN_ID: ${{ github.run_id }}
        run: python .github/scripts/runpod_cleanup.py 